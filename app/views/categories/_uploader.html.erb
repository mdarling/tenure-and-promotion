 <%= form_for [@category, Upload.new], html: { multipart: true, id: "fileupload"  } do |f| %>
  <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
  <div class="row fileupload-buttonbar">
    <div class="span7">
      <!-- The fileinput-button span is used to style the file input field as button -->
      <%= f.file_field :upload, class: 'hide'  %>
      <a class="btn btn-success" id="green_button"><em class="fa fa-folder"> </em> Browse for files...</a>
    </div>
  <script type="text/javascript">
    $('#green_button').bind("click" , function () {
      $('#upload_upload').click();
      });
  </script>
    <div class="span5">
      <!-- The global progress bar -->
      <div class="progress progress-success progress-striped active fade">
        <div class="bar" style="width:0%;"></div>
      </div>
    </div>
  </div>
  <!-- The loading indicator is shown during image processing -->
  <div class="fileupload-loading"></div>
  <br>
  <!-- The table listing the files available for upload/download -->
<div class="well">Drag and drop files and folders here. <i class="fa fa-file"></i></div>
  <table class="table table-bordered table-striped"><tbody class="files" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody>
  </table>
<% end %>
<script>
var fileUploadErrors = {
maxFileSize: 'File is too big',
minFileSize: 'File is too small',
acceptFileTypes: 'Filetype not allowed',
maxNumberOfFiles: 'Max number of files exceeded',
uploadedBytes: 'Uploaded bytes exceed file size',
emptyResult: 'Empty file upload result'
};
</script>
<%= render 'uploadjs' %>
<%= render 'downloadjs' %>

<script type="text/javascript" charset="utf-8">
$(function () {
    // Initialize the jQuery File Upload widget:
    $('#fileupload').fileupload();
    //
    // Load existing files:
    $.getJSON($('#fileupload').prop('action'), function (files) {
      var fu = $('#fileupload').data('blueimpFileupload'),
      template;
      // This is broken for some reason
      //fu._adjustMaxNumberOfFiles(-files.length);
      console.log(files);
      template = fu._renderDownload(files)
        .appendTo($('#fileupload .files'));
      // Force reflow:
      fu._reflow = fu._transition && template.length &&
        template[0].offsetWidth;
      template.addClass('in');
      $('#loading').remove();
    });

});
</script>
